NAME: AADIL AHMED ADAM
CS590 SUMMER 2016 FINAL PROJECT

This project demonstrates the use of the pthread library to write a C program that creates a number of producer and consumer threads
The producer threads will generate random numbers to be stored in a circular queue.
The consumer threads will remove elements(random numbers) from the queue.

Producer-Consumer problem is a classic example of a multi-process synchronization problem. The problem describes two processes, one the producer and another the consumer, who share a common, fixed-size buffer used as a queue. The producer's job is to generate data ,put it into the buffer, and start again.
At the same time, the consumer is consuming the data (i.e., removing it from the buffer), one piece at a time. The problem is to make sure that the producer won't try to add data into the buffer if it's full and that the consumer won't try to remove data from an empty buffer.[1]

This project was to demostrate the above problem in a C program with the help of mutex and condition variables.[2]

The random numbers generated by the producer was stored in a circular queue. Items are entered into the queue from the rear side and deleted from the front side. i.e., first in first out manner.[3]

The flow of the program is similar to the links provided below since it is the standard which is used everywhere. I have referred to the unix textbook for CS590 and the operating systems textbook for CS490 to implement the pthread concept and solving this problem using mutex and condition variables.

Given below are some of the references that i used to develop this project.

References:
[1]https://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem 

[2] http://stst.elia.pub.ro/news/SO/Modern%20Operating%20System%20-%20Tanenbaum.pdf

[3]https://macboypro.wordpress.com/2009/05/25/producer-consumer-problem-using-cpthreadsbounded-buffer/

[4]http://cis.poly.edu/cs3224a/Code/ProducerConsumerUsingPthreads.c

